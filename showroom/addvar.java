package showroom;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.*;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import static showroom.connection.dbpass;
import static showroom.connection.dbuname;
import static showroom.connection.myurl;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;


/**
 *
 * @author Lenovo
 */
public class addvar extends javax.swing.JInternalFrame {

    File myfile;
    String oldfilename;
    String sid="",mid="",vid="";
    public addvar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Add Variant");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Add Variant");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("VariantID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Choose Series");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Choose Model");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Stock");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Rate");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Description");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Discount(%)");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("....");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Series" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Model", " ", " " }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Series ID", "Model ID", "Variant ID", "Name", "Rate", "Stock"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setText("Choose Image");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(84, 84, 84))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3)
                                .addComponent(jButton4)))))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(validin())
{
      String filename="";
        if(myfile!=null)//CHECKS IF ANY FILE IS SELECTED OR NOT
        {
        filename = new java.util.Date().getTime() + myfile.getName();//Date.getTime() added for unique file name.
        int i;
        FileInputStream rd = null;//IT OBTAINS INPUT BYTES FROM A FILE
        FileOutputStream outs = null;//WRITES DATA IN A FILE

        try
        {
            rd = new FileInputStream(myfile);//MAKES CONNECTION WITH THE FILE
            outs = new FileOutputStream("uploads\\"+filename);//writing the new file in 'Images' folder, in the project

            byte[] b = new byte[2048];
            while ((i = rd.read(b)) !=-1) //RETURNS -1 IS FILE(rd) IS COMPLETELY READ
            {
                outs.write(b, 0, i); //copying from pictures to empimages byte by byte,,,,0 IS START INDEX,, b IS THE DATA
            }

            } 
            catch (Exception e) 
            {
            JOptionPane.showMessageDialog(rootPane, "error" + e.getMessage());
            } 
            finally {
            try {
                rd.close();
                outs.close();//THESE BOTH MUST BE CLOSED
                } 
                catch (Exception e) 
                {
                    JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
                }
            }
        }
        else
        {
        filename="nocar.png";
        //IF NO FILE IS SELECTED THEN DEFAULT NO IMAGE IS UPLOADED 
        }
       
        
 try
 {
 
 Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
 try
 {
 String q="insert into addvar values(?,?,?,?,?,?,?,?,?)";

 PreparedStatement myst = myconn.prepareStatement(q);
 myst.setString(1, jLabel10.getText());
 
 String bigname=jComboBox1.getSelectedItem().toString();
 String data[]=bigname.split(",");
 myst.setString(2, data[0]);
 
 bigname=jComboBox2.getSelectedItem().toString();
 String data2[]=bigname.split(",");
 myst.setString(3, data2[0]);
 
 myst.setString(4, jTextField1.getText());
 myst.setString(5, jTextField2.getText());
 myst.setString(6, jTextField3.getText());
 myst.setString(7, jTextField4.getText());
 myst.setString(8, jTextArea1.getText());
 myst.setString(9, filename);
 int count = myst.executeUpdate();
DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
 if(count==1)
 {
        JOptionPane.showMessageDialog(rootPane, "Variant added successfully");
        
        clearfields();  // THIS IS OPTIONAL
    mymodel.setRowCount(0); 
    
    fetchprodid();
 }
 else
 {
    JOptionPane.showMessageDialog(rootPane, "Variant not added successfully");
 }

 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
 }
 finally
 {
 myconn.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
 }
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        fetchcategory();
        fetchprodid();
        
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
      if(jComboBox1.getSelectedIndex()>0)
      {fetchsubcategory();}
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser myfilechooser=new JFileChooser();//MAKING OBJ OF FILE CHOOSER
        myfilechooser.setFileFilter(new FileFilter() //FILTERINIG THE FILES FROM FOLDER
        {
        @Override
        public boolean accept(File f) //SELECTING/ACCEPTING THE PARTICULAR FILES
        {   //RETURN TRUE TO SHOW THAT PARTICULAR FILE
        if(f.isDirectory()) //ACCEPTS ALL DIRECTORY(E.G. C DRIVE)
        return true;

        String extension=f.getName().substring(f.getName().lastIndexOf(".")+1);//GETTING THE EXTENSION OF IMAGE NAME
        String allowed[]={"jpg","png","gif","jpeg","bmp"};
        for(String a:allowed)//FOR EACH LOOP
        {
        if(a.equals(extension))//IF EXTENSION MATCHES,,RETURN TRUE
        {
        return true;
        }
        else
        {
        return false;
        }
        }
        return false;//IF ANYTHING ELSE RETURN FALSE
        }

        @Override
        public String getDescription() //THIS WILL BE SHOWN UNDER THE FILE NAME OPTION IN FILE CHOOSER
        {
        return "All Picture Files";
        }
        });
//TILL NOW WE JUST SELECTED FILES TO SHOW IN FILECHOOSER

        if(myfilechooser.showOpenDialog(rootPane)==JFileChooser.APPROVE_OPTION)//OPENDIALOG IS ANOTHER THING TO OPEN AND GIVES TRUE IF "OPEN" IS SELECTED
        {
            myfile=myfilechooser.getSelectedFile();//MYFILE NOW CONTAINS THE IMAGE
            try
            { 
                Image simg = ImageIO.read( new File(myfile.getAbsolutePath())).getScaledInstance( jLabel11.getWidth(), jLabel11.getHeight(), Image.SCALE_AREA_AVERAGING);//GIVES IMAGE OF DIFF QUALITY
        //TO FIT IMAGE IN LABEL=READ IN NEW VARIABLE,,GET ABSOUTE PATH OF "MYFILE" WE SCALE IT ACC TO SIZE OF OUR LABEL  
        // HERE READ RETURNS A BUFFERED IMAGE
                jLabel11.setIcon(new ImageIcon(simg));// WE SET ICON SIMILAR TO SET STRING
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Cannot read image");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
          sid = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
          mid = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
          vid = jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString();
          try
            {
            Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
            try
            {
            String q="select * from addvar where varid=?";

            PreparedStatement myst = myconn.prepareStatement(q);
            myst.setString(1,vid);
            ResultSet myres = myst.executeQuery();

            if(myres.next())
            {
                String qu="select * from addseries where serid=?";
                PreparedStatement myst1 = myconn.prepareStatement(qu);
                myst1.setString(1,sid);
                ResultSet myres1 = myst1.executeQuery();
                if(myres1.next())
                {
                    String quu="select * from addmodel where modid=?";
                    PreparedStatement myst2 = myconn.prepareStatement(quu);
                    myst2.setString(1,mid);
                    ResultSet myres2 = myst2.executeQuery();
                    if(myres2.next())
                    {
                        jLabel10.setText(myres.getString("varid"));
                        String myfile=myres.getString("pic");//THIS IS FOR IMAGE/ICON SETTING ON LABEL
                        oldfilename=myfile;
                        Image simg = ImageIO.read( new File("uploads//" + myfile)).getScaledInstance( jLabel11.getWidth(), jLabel11.getHeight(), Image.SCALE_DEFAULT);
                        jLabel11.setIcon(new ImageIcon(simg));//IMAGEICON=CREATES IMAGE ICON FOR THE IMAGE
                        jTextField1.setText(myres.getString("name"));
                        jTextField2.setText(myres.getString("rate"));
                        jTextField3.setText(myres.getString("stock"));
                        jTextField4.setText(myres.getString("discount"));
                        jTextArea1.setText(myres.getString("description"));
                        jComboBox1.setSelectedItem(sid+","+myres1.getString("name"));
                        jComboBox2.setSelectedItem(mid+","+myres2.getString("name"));
                        
                        jButton3.setEnabled(true);
                        jButton4.setEnabled(true);
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "No model found");
                clearfields();
                jButton3.setEnabled(false);
                jButton4.setEnabled(false);
            }

            }
            catch(Exception e)
            {
                e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error Occured while mouse clicking" + e.getMessage());
                
            }
            finally
            {
            myconn.close();
            }
            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 if(validin())
{
    String filename="";
        if(myfile!=null)//CHECKS IF ANY FILE IS SELECTED OR NOT
        {
        filename = new java.util.Date().getTime() + myfile.getName();//Date.getTime() added for unique file name.
        int i;
        FileInputStream rd = null;//IT OBTAINS INPUT BYTES FROM A FILE
        FileOutputStream outs = null;//WRITES DATA IN A FILE

        try
        {
            rd = new FileInputStream(myfile);//MAKES CONNECTION WITH THE FILE
            outs = new FileOutputStream("uploads\\"+filename);//writing the new file in 'Images' folder, in the project

            byte[] b = new byte[2048];
            while ((i = rd.read(b)) !=-1) //RETURNS -1 IS FILE(rd) IS COMPLETELY READ
            {
                outs.write(b, 0, i); //copying from pictures to empimages byte by byte,,,,0 IS START INDEX,, b IS THE DATA
            }

            } 
            catch (Exception e) 
            {
            JOptionPane.showMessageDialog(rootPane, "error" + e.getMessage());
            } 
            finally {
            try {
                rd.close();
                outs.close();//THESE BOTH MUST BE CLOSED
                } 
                catch (Exception e) 
                {
                    JOptionPane.showMessageDialog(rootPane, "error in closing file" + e.getMessage());
                }
            }
        }
        else
        {
        filename=oldfilename;
        //IF NO FILE IS SELECTED THEN DEFAULT NO IMAGE IS UPLOADED 
        }
       
    
    
 
 try  //TO UPDATE
 {
 
 Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);//IMPORTANT- WE CALL CONSTRUCTOR OR IMPORT STATIC ITS VARIABLES THAT WE USE WHILE MAKING CONNECTION  
 try
 {
 String q="update addvar set serid=?,modid=?,name=?,rate=?,stock=?,discount=?,description=?,pic=? where varid=?";
//UPDATE AND DELETE ARE VERY RISKY COMMANDS AS IF WE DONT ADD WHERE ALL THE RECORDS WILL BE UPDATED/DELETED
 PreparedStatement myst = myconn.prepareStatement(q);
 String bigname=jComboBox1.getSelectedItem().toString();
 String data[]=bigname.split(",");
 myst.setString(1, data[0]);
 String bigname1=jComboBox2.getSelectedItem().toString();
 String data1[]=bigname1.split(",");
 myst.setString(2, data1[0]);
 myst.setString(3, jTextField1.getText());
 myst.setString(4, jTextField2.getText());
 myst.setString(5, jTextField3.getText());
 myst.setString(6, jTextField4.getText());
 myst.setString(7, jTextArea1.getText());
 myst.setString(8, filename);
 myst.setString(9, vid);
// EVERY AREA IS UPDATED AGAIN
 int count = myst.executeUpdate();
DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                   
 if(count==1)
 {
     jButton3.setEnabled(false);
     jButton4.setEnabled(false);
    JOptionPane.showMessageDialog(rootPane, "Variant updated successfully");
    clearfields();  // THIS IS OPTIONAL
    mymodel.setRowCount(0); 
    
    fetchprodid();
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "Variant not updated successfully");
 }

 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error Occured while updating" + e.getMessage());
 }
 finally
 {
 myconn.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
 }
}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

 int uchoice = JOptionPane.showConfirmDialog(rootPane,"Are you sure to delete?");//SHOWS A CONFIRM DIALOG BOX
 if(uchoice==JOptionPane.YES_OPTION)//YES OPTION GIVES AN INTEGER
 {
    try  
    {      //TO DELETE

        Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
        try
        {

        String q="delete from addvar where varid=?";

        PreparedStatement myst = myconn.prepareStatement(q);
        myst.setString(1, vid);
        int count = myst.executeUpdate();
        DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
        if(count==1)
        {
            jButton3.setEnabled(false);
            jButton4.setEnabled(false);
              JOptionPane.showMessageDialog(rootPane, "Variant deleted successfully");
             
             clearfields();
             mymodel.setRowCount(0); 
             fetchprodid();
           }
        else
        {
        JOptionPane.showMessageDialog(rootPane, "Variant not deleted successfully");
        }

        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane, "Error Occured while deleting" + e.getMessage());
        }
        finally
        {
        myconn.close();
        }
    }
    catch(Exception e)
    {
    JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
    }
 }
    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
if(jComboBox2.getSelectedIndex()>0) {       fetchtable();}
    }//GEN-LAST:event_jComboBox2ActionPerformed
void fetchcategory()
 {
 try
 {
 Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
 try
 {
 String qu="select * from addseries";
 PreparedStatement myst = myconn.prepareStatement(qu);
 ResultSet myres=myst.executeQuery();
 if(myres.next())
  {
   do
   {
     jComboBox1.addItem(myres.getString("serid")+","+myres.getString("name"));
   }
    while(myres.next());
  }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
 }
 finally
 {
 myconn.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
 }
 }
void fetchsubcategory()
 {
 try
 {
 Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
 try
 {
    String qu="select * from addmodel where serid=?";
    PreparedStatement myst = myconn.prepareStatement(qu);

    String bigname=jComboBox1.getSelectedItem().toString();//Sends serid to addmodel to get its models
    String data[]=bigname.split(",");
    myst.setString(1, data[0]);

    ResultSet myres=myst.executeQuery();
    if(myres.next())
    {
       jComboBox2.removeAllItems();  // ADDING NEW DATA WHILE FETCHING
       jComboBox2.addItem("Choose Model");
       do
       {
           jComboBox2.addItem(myres.getString("modid")+","+myres.getString("name"));
       }
       while(myres.next());
    }
    else
    {
       jComboBox2.removeAllItems();
       jComboBox2.addItem("No models");
    }

 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
 }
 finally
 {
 myconn.close();
 }
 
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
 }
 }
void fetchprodid()
 {
 try
 {
 Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
 try
 {
 String qu="select * from addvar order by varid desc";//desc is descending order
 PreparedStatement myst = myconn.prepareStatement(qu);
 
 ResultSet myres=myst.executeQuery();
 if(myres.next())
 {
 int vid = myres.getInt("varid");//directly gets int from database
 vid++;//increases 1 from last varid
 jLabel10.setText(String.valueOf(vid));
 }
 else
 {
 jLabel10.setText("100");//initial varid(can be any)
 }

 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
 }
 finally
 {
 myconn.close();
 }
 
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
 }
 }
    boolean validin()
    {
       if(jComboBox1.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please choose series");
            return false;
        }
       if(jComboBox2.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please choose model");
            return false;
        }
        if(jTextField1.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter variant name");
            return false;
        }
        if(jTextField2.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter variant rate");
            return false;
        }
        if(jTextField3.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter variant stock");
            return false;
        }
        if(jTextField4.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter discount");
            return false;
        }
        if(jTextArea1.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter description");
            return false;
        }
        else
         {
             return true;
         } 
    }
    void fetchtable()
    {
         try              
        {
            Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
            try
            {
                String q="select * from addvar where modid=?";
                PreparedStatement myst = myconn.prepareStatement(q);
                String a=jComboBox2.getSelectedItem().toString();
                String data[]=a.split(",");
                myst.setString(1, data[0]);
                ResultSet myres = myst.executeQuery();
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                if(myres.next())
                {
                   mymodel.setRowCount(0);
                 do
                 {
                    String mid=myres.getString("modid");
                    String sid=myres.getString("serid");
                    String vid=myres.getString("varid");
                    String name=myres.getString("name");
                    String rate=myres.getString("rate");
                    String stock=myres.getString("stock");
                    Object myrow[] = {sid,mid,vid,name,rate,stock};
                    mymodel.addRow(myrow);
                    }
                    while(myres.next());
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Variant found");
                    mymodel.setRowCount(0);
             
                }

        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane, "Error Occured while searching variant " + e.getMessage());
        }
        finally
        {
        myconn.close();
        }
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
    void clearfields()
    {
        jLabel10.setText("....");
        jLabel11.setIcon(null);
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        jTextField4.setText(null);
        jTextArea1.setText(null);
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
