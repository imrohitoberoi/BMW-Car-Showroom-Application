package showroom;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static showroom.connection.dbpass;
import static showroom.connection.dbuname;
import static showroom.connection.myurl;

/**
 *
 * @author Lenovo
 */
public class addsupp extends javax.swing.JInternalFrame {

    /**
     * Creates new form addseries
     */
    public addsupp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Add Supplier");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Add Supplier");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Phone");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Address");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supp ID", "Name", "Phone", "Address"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Our Suppliers");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(195, 195, 195))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(validin())
{try
 {
     Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
 try
 {
 String q="select * from addsupp where name=?";

 PreparedStatement myst = myconn.prepareStatement(q);
 myst.setString(1, jTextField1.getText());
  ResultSet myres = myst.executeQuery();
 if(myres.next()==false)
 {
      
            try
             {
                 String qu="insert into addsupp(name,phone,address) values(?,?,?)";//SENDING QUERY
 
                PreparedStatement mystt = myconn.prepareStatement(qu);
                mystt.setString(1, jTextField1.getText());
                mystt.setString(2, jTextField2.getText());
                mystt.setString(3, jTextField3.getText());
                
                int count = mystt.executeUpdate();//HERE OUTPUT IS 1 IF EXECUTED SUCCESFULLY
DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                if(count==1)
                {
                    JOptionPane.showMessageDialog(rootPane, "Supplier added successfully");
                             mymodel.setRowCount(0); 
             fetchtable();
                clearfields();
                }
                else
                {
                JOptionPane.showMessageDialog(rootPane, "Supplier not added successfully");
                }
             }
            catch(Exception e)
                {
                JOptionPane.showMessageDialog(rootPane, "Error in inputting " + e.getMessage());
                }
        }
 
 else
 {
         JOptionPane.showMessageDialog(rootPane, "Supplier already added");
 }}
catch(Exception e)
 {
   JOptionPane.showMessageDialog(rootPane, "Error Occured while searching");
 }
  finally
 {
    myconn.close();
 }
 }
 catch(Exception e)
 {
   JOptionPane.showMessageDialog(rootPane, "Error Occured while connecting");
 }
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
       
                jButton3.setEnabled(false);
                jButton2.setEnabled(false);
               fetchtable();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        try
            {
            Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
            try
            {
            String q="select * from addsupp where suppid=?";

            PreparedStatement myst = myconn.prepareStatement(q);
            myst.setString(1,id);
            ResultSet myres = myst.executeQuery();

            if(myres.next())
            {
                jTextField1.setText(myres.getString("name"));
                jTextField2.setText(myres.getString("phone"));
                jTextField3.setText(myres.getString("address"));

                jButton3.setEnabled(true);
                jButton2.setEnabled(true);

            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "No supplier found");
                clearfields();
                jButton3.setEnabled(false);
                jButton2.setEnabled(false);
            }

            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error Occured while mouse clicking" + e.getMessage());
            }
            finally
            {
            myconn.close();
            }
            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
            }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
 int uchoice = JOptionPane.showConfirmDialog(rootPane,"Are you sure to delete?");//SHOWS A CONFIRM DIALOG BOX
 if(uchoice==JOptionPane.YES_OPTION)//YES OPTION GIVES AN INTEGER
 {
    try  
    {      //TO DELETE

        Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
        try
        {

        String q="delete from addsupp where suppid=?";

        PreparedStatement myst = myconn.prepareStatement(q);
        myst.setString(1, id);
        int count = myst.executeUpdate();
DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
        if(count==1)
        {
            jButton3.setEnabled(false);
                jButton2.setEnabled(false);
            if(jTable1.getSelectedRowCount()!=0)
            {
             JOptionPane.showMessageDialog(rootPane, "Supplier deleted successfully");
       
             mymodel.removeRow(jTable1.getSelectedRow());
             clearfields();
                      mymodel.setRowCount(0); 
             fetchtable();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Supplier deleted successfully");
                clearfields();
                mymodel.setRowCount(0); 
     fetchtable();
            }
        }
        else
        {
        JOptionPane.showMessageDialog(rootPane, "Supplier not deleted successfully");
        }

        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane, "Error Occured while deleting" + e.getMessage());
        }
        finally
        {
        myconn.close();
        }
    }
    catch(Exception e)
    {
    JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
    }
 }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if(validin())
{
   String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
 try  //TO UPDATE
 {
 
 Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);//IMPORTANT- WE CALL CONSTRUCTOR OR IMPORT STATIC ITS VARIABLES THAT WE USE WHILE MAKING CONNECTION  
 try
 {
 String q="update addsupp set name=?,phone=?,address=? where suppid=?";
//UPDATE AND DELETE ARE VERY RISKY COMMANDS AS IF WE DONT ADD WHERE ALL THE RECORDS WILL BE UPDATED/DELETED
 PreparedStatement myst = myconn.prepareStatement(q);
 myst.setString(1, jTextField1.getText());
 myst.setString(2, jTextField2.getText());
 myst.setString(3, jTextField3.getText());
 myst.setString(4, id);
// EVERY AREA IS UPDATED AGAIN
 int count = myst.executeUpdate();
DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                   
 if(count==1)
 {
     jButton3.setEnabled(false);
                jButton2.setEnabled(false);

 
 JOptionPane.showMessageDialog(rootPane, "Supplier updated successfully");
 clearfields();  // THIS IS OPTIONAL
      mymodel.setRowCount(0); 
    fetchtable();
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "Supplier not updated successfully");
 }

 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error Occured while updating" + e.getMessage());
 }
 finally
 {
 myconn.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
 }
}
    }//GEN-LAST:event_jButton2ActionPerformed

    void clearfields()
    {
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
    }
    void fetchtable()
    {
         try              
        {
            Connection myconn = DriverManager.getConnection(myurl, dbuname, dbpass);
            try
            {
                String q="select * from addsupp";
                PreparedStatement myst = myconn.prepareStatement(q);
                ResultSet myres = myst.executeQuery();
                DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
                if(myres.next())
                {
                   mymodel.setRowCount(0);
                 do
                 {
                    String id=myres.getString("suppid");
                    String name=myres.getString("name");
                    String phone=myres.getString("phone");
                    String add=myres.getString("address");
                    Object myrow[] = {id,name,phone,add};
                    mymodel.addRow(myrow);
                    }
                    while(myres.next());
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Supplier found");
                    mymodel.setRowCount(0);
             
                }

        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane, "Error Occured while searching supplier" + e.getMessage());
        }
        finally
        {
        myconn.close();
        }
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(rootPane, "Error in connection " + e.getMessage());
        }
    }
   boolean validin()
    {
         if(jTextField1.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter supplier name");
            return false;
        }
          if(jTextField2.getText().length()!=10)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid phone number");
            return false;
        }
           if(jTextField3.getText().length()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter address");
            return false;
        }
        else
        {
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
